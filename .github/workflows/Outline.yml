name: Convert LaTeX to HTML
on:
  push:
    branches:
      - main

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Outline repository
        uses: actions/checkout@v3
        with:
          repository: tomoto0/Outline
          path: Outline

      - name: Checkout tomoto0.github.io repository
        uses: actions/checkout@v3
        with:
          repository: tomoto0/tomoto0.github.io
          path: tomoto0.github.io

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-latex-extra pdf2svg
          pip install pandocfilters

      - name: Create Python filter for TikZ conversion
        run: |
          cat << EOF > tikz_to_svg.py
          #!/usr/bin/env python3
          import pandocfilters as pf
          import subprocess
          import os
          import hashlib

          def tikz2svg(key, value, format, meta):
              if key == 'CodeBlock':
                  [[ident, classes, keyvals], code] = value
                  if "tikz" in classes:
                      outfile = hashlib.md5(code.encode()).hexdigest()
                      tmpdir = "/tmp"
                      texfile = os.path.join(tmpdir, outfile + ".tex")
                      with open(texfile, "w") as f:
                          f.write(r"\documentclass{standalone}" + "\n")
                          f.write(r"\usepackage{tikz}" + "\n")
                          f.write(r"\begin{document}" + "\n")
                          f.write(code)
                          f.write(r"\end{document}")
                      
                      subprocess.run(["pdflatex", "-output-directory", tmpdir, texfile], check=True, capture_output=True)
                      subprocess.run(["pdf2svg", os.path.join(tmpdir, outfile + ".pdf"), os.path.join(tmpdir, outfile + ".svg")], check=True)
                      
                      with open(os.path.join(tmpdir, outfile + ".svg"), "r") as f:
                          svg = f.read()
                      
                      return pf.RawBlock('html', svg)

          if __name__ == "__main__":
              pf.toJSONFilter(tikz2svg)
          EOF

      - name: Convert LaTeX to HTML
        run: |
          pandoc ./Outline/Outline.tex -o ./tomoto0.github.io/outline.html \
            --standalone \
            --mathjax \
            --css=https://latex.vercel.app/style.css \
            --highlight-style=pygments \
            --filter=./tikz_to_svg.py

      - name: Add additional CSS and scripts
        run: |
          title=$(grep -m 1 '\\title{' ./Outline/Outline.tex | sed -E 's/\\title\{(.*)\}/\1/')
          sed -i "s/<title>.*<\/title>/<title>$title<\/title>/" ./tomoto0.github.io/outline.html
          sed -i '/<style>/r'<(cat << EOF
            .latex-dark-auto {
              --bg-color: #ffffff;
              --text-color: #333333;
            }
            @media (prefers-color-scheme: dark) {
              .latex-dark-auto {
                --bg-color: #222222;
                --text-color: #dddddd;
              }
            }
            body {
              background-color: var(--bg-color);
              color: var(--text-color);
            }
            svg {
              max-width: 100%;
              height: auto;
            }
          EOF
          ) ./tomoto0.github.io/outline.html

      - name: Commit and push changes
        run: |
          cd ./tomoto0.github.io
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add outline.html
          git commit -m 'Convert LaTeX to HTML with improved styling and embedded SVG figures'
          git push

    env:
      GITHUB_TOKEN: ${{ secrets.PAT_FOR_OUTLINE_REPO }}
